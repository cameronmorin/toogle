{"ast":null,"code":"import _classCallCheck from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cam/Dev/git/testNpm/test/src/Test.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon } from 'semantic-ui-react'; // import './test_tweet.json'\n\nimport testTweet from './testTweet';\nimport newTweet from './newTweet';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this, props));\n\n    if (newTweet.entities.urls.length == 0) {\n      _this.state = {\n        id: testTweet.id,\n        url: null,\n        text: testTweet.text,\n        userName: testTweet.user.name\n      };\n    } else {\n      console.log(newTweet.entities.urls.url);\n      _this.state = {\n        id: newTweet.id,\n        url: newTweet.entities.urls.url,\n        text: newTweet.text,\n        userName: newTweet.user.name\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        header: this.state.userName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        description: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), \"4 Friends\"));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["/home/cam/Dev/git/testNpm/test/src/Test.js"],"names":["React","Component","Card","Icon","testTweet","newTweet","Test","props","entities","urls","length","state","id","url","text","userName","user","name","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AAEA,QAAIF,QAAQ,CAACG,QAAT,CAAkBC,IAAlB,CAAuBC,MAAvB,IAAiC,CAArC,EAAwC;AACtC,YAAKC,KAAL,GAAa;AACXC,QAAAA,EAAE,EAAER,SAAS,CAACQ,EADH;AAEXC,QAAAA,GAAG,EAAE,IAFM;AAGXC,QAAAA,IAAI,EAAEV,SAAS,CAACU,IAHL;AAIXC,QAAAA,QAAQ,EAAEX,SAAS,CAACY,IAAV,CAAeC;AAJd,OAAb;AAMD,KAPD,MAQK;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACG,QAAT,CAAkBC,IAAlB,CAAuBI,GAAnC;AACA,YAAKF,KAAL,GAAa;AACXC,QAAAA,EAAE,EAAEP,QAAQ,CAACO,EADF;AAEXC,QAAAA,GAAG,EAAER,QAAQ,CAACG,QAAT,CAAkBC,IAAlB,CAAuBI,GAFjB;AAGXC,QAAAA,IAAI,EAAET,QAAQ,CAACS,IAHJ;AAIXC,QAAAA,QAAQ,EAAEV,QAAQ,CAACW,IAAT,CAAcC;AAJb,OAAb;AAMD;;AAnBgB;AAoBlB;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWI,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWG,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,cAHF,CADF;AAUD;;;;EAlCgBb,S;;AAsCnB,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon } from 'semantic-ui-react'\n// import './test_tweet.json'\nimport testTweet from './testTweet'\nimport newTweet from './newTweet'\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    if (newTweet.entities.urls.length == 0) {\n      this.state = {\n        id: testTweet.id,\n        url: null,\n        text: testTweet.text,\n        userName: testTweet.user.name\n      }\n    }\n    else {\n      console.log(newTweet.entities.urls.url)\n      this.state = {\n        id: newTweet.id,\n        url: newTweet.entities.urls.url,\n        text: newTweet.text,\n        userName: newTweet.user.name\n      };\n    }\n  }\n  \n  render() {\n    return (\n      <Card>\n        <Card.Content header={this.state.userName} />\n        <Card.Content description={this.state.text} />\n        <Card.Content extra>\n          <Icon name='user' />\n          4 Friends\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}