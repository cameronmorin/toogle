{"ast":null,"code":"import _classCallCheck from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cam/Dev/git/testNpm/test/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Test from './Test';\nimport { Card, Icon, Input } from 'semantic-ui-react';\nimport newTweet from './newTweet';\nimport testTweet from './testTweet';\nvar tweetArray = [newTweet, testTweet, testTweet, newTweet, newTweet, testTweet, testTweet, newTweet]; // const request = new Request('http://localhost:9200/new_index/_search?q=text:the&size=10000');\n// const url = request.url;\n// const method = request.method;\n// const credentials = request.credentials;\n// fetch (request)\n// const getTweets = () => {\n//   return fetch('http://localhost:9200/new_index/_search?q=text:the&size=10000', {\n//                 mode: 'no-cors'\n//               })\n//       .then(res => res.json())\n//       .then(posts => console.log(posts))\n// }\n// const tweets = getTweets();\n// console.log(tweets);\n// fetch('http://localhost:9200/new_index/_search?q=text:the&size=10000', {\n//   mode: 'cors'\n//   })\n//     .then(function(response) {\n//       return response;\n//     })\n//     .then(function(myJson) {\n//       console.log(JSON.stringify(myJson));\n//   });\n// var testFetch = fetch('localhost:9200/new_index/_search?q=text:draft&size=10000&pretty=true');\n// console.log(testFetch)\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (event) {\n      return fetch('http://localhost:9200/?text=${event.target.value}').then(function (res) {\n        return res.json();\n      }).then(function (tweets) {\n        return tweets.map(function (tweet) {\n          return tweet._source;\n        });\n      }).then(function (tweets) {\n        return _this.setState({\n          tweets: tweets\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var items = [];\n      var input = \"\";\n      var url = \"\";\n\n      for (var i = 0; i < tweetArray.length; ++i) {\n        url = \"\";\n\n        if (tweetArray[i].entities.urls.length > 0) {\n          url = tweetArray[i].entities.urls[0].url;\n        }\n\n        items.push(React.createElement(Test, {\n          style: \"card-header\",\n          tweet: tweetArray[i],\n          url: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      } // const searchInput = () => <Input icon='search' iconPosition=\"left\" placeholder='Search...' />\n\n\n      return React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Toogle\"), React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, input = React.createElement(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        type: \"text\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center-tweets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        itemsPerRow: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, items)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/cam/Dev/git/testNpm/test/src/App.js"],"names":["React","Component","Test","Card","Icon","Input","newTweet","testTweet","tweetArray","App","onChange","event","fetch","then","res","json","tweets","map","tweet","_source","setState","items","input","url","i","length","entities","urls","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,UAAU,GAAG,CAACF,QAAD,EAAWC,SAAX,EAAsBA,SAAtB,EAAiCD,QAAjC,EAA2CA,QAA3C,EAAqDC,SAArD,EAAgEA,SAAhE,EAA2ED,QAA3E,CAAjB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;IAEMG,G;;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,UAAAC,KAAK;AAAA,aACdC,KAAK,CAAC,mDAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAG,MAAM;AAAA,eAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACC,OAAV;AAAA,SAAhB,CAAH;AAAA,OAFd,EAGGN,IAHH,CAGQ,UAAAG,MAAM;AAAA,eAAI,MAAKI,QAAL,CAAc;AAAEJ,UAAAA,MAAM,EAANA;AAAF,SAAd,CAAJ;AAAA,OAHd,CADc;AAAA,K;;;;;;;6BAMP;AACP,UAAIK,KAAK,GAAG,EAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,GAAG,GAAG,EAAV;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,UAAU,CAACiB,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;AAC1CD,QAAAA,GAAG,GAAG,EAAN;;AACA,YAAIf,UAAU,CAACgB,CAAD,CAAV,CAAcE,QAAd,CAAuBC,IAAvB,CAA4BF,MAA5B,GAAqC,CAAzC,EAA4C;AAC1CF,UAAAA,GAAG,GAAGf,UAAU,CAACgB,CAAD,CAAV,CAAcE,QAAd,CAAuBC,IAAvB,CAA4B,CAA5B,EAA+BJ,GAArC;AACD;;AACDF,QAAAA,KAAK,CAACO,IAAN,CAAW,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,aAAb;AAA4B,UAAA,KAAK,EAAEpB,UAAU,CAACgB,CAAD,CAA7C;AAAkD,UAAA,GAAG,EAAED,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACD,OAXM,CAaP;;;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,GAAG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,YAAY,EAAC,MAAlC;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAqD,QAAA,QAAQ,EAAE,KAAKZ,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,KADH,CADF,CALF,CADJ;AA6BD;;;;EAnDepB,S;;AAsDlB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Test from './Test'\nimport { Card, Icon, Input } from 'semantic-ui-react'\nimport newTweet from './newTweet'\nimport testTweet from './testTweet'\n\nvar tweetArray = [newTweet, testTweet, testTweet, newTweet, newTweet, testTweet, testTweet, newTweet];\n\n// const request = new Request('http://localhost:9200/new_index/_search?q=text:the&size=10000');\n// const url = request.url;\n// const method = request.method;\n// const credentials = request.credentials;\n\n// fetch (request)\n// const getTweets = () => {\n//   return fetch('http://localhost:9200/new_index/_search?q=text:the&size=10000', {\n//                 mode: 'no-cors'\n//               })\n//       .then(res => res.json())\n//       .then(posts => console.log(posts))\n// }\n// const tweets = getTweets();\n// console.log(tweets);\n\n// fetch('http://localhost:9200/new_index/_search?q=text:the&size=10000', {\n//   mode: 'cors'\n//   })\n//     .then(function(response) {\n//       return response;\n//     })\n//     .then(function(myJson) {\n//       console.log(JSON.stringify(myJson));\n//   });\n\n// var testFetch = fetch('localhost:9200/new_index/_search?q=text:draft&size=10000&pretty=true');\n// console.log(testFetch)\n\nclass App extends Component {\n  onChange = event => \n    fetch('http://localhost:9200/?text=${event.target.value}')\n      .then(res => res.json())\n      .then(tweets =>tweets.map(tweet => tweet._source))\n      .then(tweets => this.setState({ tweets }));\n\n  render() {\n    var items = [];\n    var input = \"\";\n    var url = \"\";\n\n    for (var i = 0; i < tweetArray.length; ++i) {\n      url = \"\";\n      if (tweetArray[i].entities.urls.length > 0) {\n        url = tweetArray[i].entities.urls[0].url\n      }\n      items.push(<Test style={\"card-header\"} tweet={tweetArray[i]} url={url}/>);\n    }\n\n    // const searchInput = () => <Input icon='search' iconPosition=\"left\" placeholder='Search...' />\n\n    return (\n        <div className=\"App-header\">\n          <h1>Toogle</h1>\n          <div className=\"search-bar\">\n            {input = <Input icon='search' iconPosition=\"left\" type=\"text\" onChange={this.onChange} />}\n          </div>\n          <div className=\"center-tweets\">\n            <Card.Group itemsPerRow={2}>\n              {items}\n              {/* {this.state.tweets.map(tweet => (\n                <Card href={tweet.url.url} target='_blank'>\n                  <Card.Content>\n                    <Card.Header style={{flex: 0}}>\n                      <Image floated='left' size='mini' circular src={tweet.picture} />\n                      {at.concat(tweet.userName)}\n                    </Card.Header>\n                    <Card.Description>{tweet.text}</Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <Icon name='user' />\n                    {tweet.followers}\n                  </Card.Content>\n                </Card>  \n              ))}\n              */}\n            </Card.Group>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}