{"ast":null,"code":"import _classCallCheck from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cam/Dev/git/testNpm/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cam/Dev/git/testNpm/test/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Test from './Test';\nimport { Card, Icon, Input, Image } from 'semantic-ui-react';\nimport newTweet from './newTweet';\nimport testTweet from './testTweet'; // var tweetArray = [newTweet, testTweet, testTweet, newTweet, newTweet, testTweet, testTweet, newTweet];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tweets: []\n    };\n\n    _this.onChange = function (event) {\n      return fetch(\"http://localhost:8000/?text=\".concat(encodeURIComponent(event.target.value), \"&size=10\")).then(function (res) {\n        return res.json();\n      }).then(function (tweets) {\n        return tweets.map(function (tweet) {\n          return tweet._source;\n        });\n      }).then(function (tweets) {\n        console.log(tweets);\n\n        _this.setState({\n          tweets: tweets\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var items = [];\n      var input = \"\";\n      var url = \"\"; // for (var i = 0; i < tweetArray.length; ++i) {\n      //   url = \"\";\n      //   if (tweetArray[i].entities.urls.length > 0) {\n      //     url = tweetArray[i].entities.urls[0].url\n      //   }\n      //   items.push(<Test style={\"card-header\"} tweet={tweetArray[i]} url={url}/>);\n      // }\n      // const searchInput = () => <Input icon='search' iconPosition=\"left\" placeholder='Search...' />\n\n      return React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Toogle\"), React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, input = React.createElement(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        type: \"text\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center-tweets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        itemsPerRow: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.tweets.map(function (tweet) {\n        return React.createElement(Card, {\n          href: tweet.url.url,\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          style: {\n            flex: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Image, {\n          floated: \"left\",\n          size: \"mini\",\n          circular: true,\n          src: tweet.picture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), \"@\".concat(tweet.userName)), React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, tweet.text)), React.createElement(Card.Content, {\n          extra: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), tweet.followers));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/cam/Dev/git/testNpm/test/src/App.js"],"names":["React","Component","Test","Card","Icon","Input","Image","newTweet","testTweet","App","state","tweets","onChange","event","fetch","encodeURIComponent","target","value","then","res","json","map","tweet","_source","console","log","setState","items","input","url","flex","picture","userName","text","followers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Test from './Test'\nimport { Card, Icon, Input, Image} from 'semantic-ui-react'\nimport newTweet from './newTweet'\nimport testTweet from './testTweet'\n\n// var tweetArray = [newTweet, testTweet, testTweet, newTweet, newTweet, testTweet, testTweet, newTweet];\n\nclass App extends Component {\n  state = {\n    tweets: []\n  }\n\n  onChange = event => \n    fetch(`http://localhost:8000/?text=${encodeURIComponent(event.target.value)}&size=10`)\n      .then(res => res.json())\n      .then(tweets =>tweets.map(tweet => tweet._source))\n      .then(tweets => {\n        console.log(tweets);\n        this.setState({ tweets })\n      });\n\n  render() {\n    var items = [];\n    var input = \"\";\n    var url = \"\";\n\n    // for (var i = 0; i < tweetArray.length; ++i) {\n    //   url = \"\";\n    //   if (tweetArray[i].entities.urls.length > 0) {\n    //     url = tweetArray[i].entities.urls[0].url\n    //   }\n    //   items.push(<Test style={\"card-header\"} tweet={tweetArray[i]} url={url}/>);\n    // }\n\n    // const searchInput = () => <Input icon='search' iconPosition=\"left\" placeholder='Search...' />\n\n    return (\n        <div className=\"App-header\">\n          <h1>Toogle</h1>\n          <div className=\"search-bar\">\n            {input = <Input icon='search' iconPosition=\"left\" type=\"text\" onChange={this.onChange} />}\n          </div>\n          <div className=\"center-tweets\">\n            <Card.Group itemsPerRow={2}>\n              {/* {items} */}\n              {this.state.tweets.map(tweet => (\n                <Card href={tweet.url.url} target='_blank'>\n                  <Card.Content>\n                    <Card.Header style={{flex: 0}}>\n                      <Image floated='left' size='mini' circular src={tweet.picture} />\n                      {`@${tweet.userName}`}\n                    </Card.Header>\n                    <Card.Description>{tweet.text}</Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <Icon name='user' />\n                    {tweet.followers}\n                  </Card.Content>\n                </Card>  \n              ))}\n             \n            </Card.Group>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}